# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class Test():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_(self):
        self.driver.get("https://www.thsrc.com.tw/")
        self.driver.set_window_size(1346, 708)
        element = self.driver.find_element(By.CSS_SELECTOR, ".slick-current .pic-l")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element, 0, 0).perform()
        self.driver.find_element(By.ID, "a_irs").click()
        self.driver.switch_to.frame(1)
        self.driver.find_element(By.ID, "select_location01").click()
        dropdown = self.driver.find_element(By.ID, "select_location01")
        dropdown.find_element(By.XPATH, "//option[. = '台北']").click()
        self.driver.find_element(By.ID, "select_location02").click()
        dropdown = self.driver.find_element(By.ID, "select_location02")
        dropdown.find_element(By.XPATH, "//option[. = '台中']").click()
        self.driver.find_element(By.ID, "Departdate02").click()
        self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(6) > .day:nth-child(6)").click()
        self.driver.find_element(By.ID, "toPortalTimeTable").click()
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .fa-chevron-up").click()
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .fa-chevron-up").click()
        element = self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .fa-chevron-up")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .fa-chevron-up").click()
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .fa-chevron-up").click()
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .fa-chevron-up").click()
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .fa-chevron-up").click()
        self.driver.find_element(By.CSS_SELECTOR, ".col-lg-10").click()
        self.driver.find_element(By.ID, "securityCode").click()
        self.driver.find_element(By.ID, "securityCode").send_keys("VRC5")
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.find_element(By.ID, "SubmitButton").click()
        self.vars["win1111"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win1111"])
        self.driver.find_element(By.CSS_SELECTOR, "span:nth-child(7) .uk-radio").click()
        self.driver.find_element(By.NAME, "SubmitButton").click()
